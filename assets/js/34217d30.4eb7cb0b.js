(self.webpackChunkfossology_blogs=self.webpackChunkfossology_blogs||[]).push([[970],{3905:function(e,t,o){"use strict";o.d(t,{Zo:function(){return c},kt:function(){return g}});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(o),g=r,f=d["".concat(s,".").concat(g)]||d[g]||p[g]||a;return o?n.createElement(f,l(l({ref:t},c),{},{components:o})):n.createElement(f,l({ref:t},c))}));function g(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,l=new Array(a);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var u=2;u<a;u++)l[u]=o[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},7072:function(e,t,o){"use strict";o.r(t),o.d(t,{frontMatter:function(){return l},metadata:function(){return i},toc:function(){return s},default:function(){return c}});var n=o(2122),r=o(9756),a=(o(7294),o(3905)),l={},i={unversionedId:"docs/Autoloading",id:"docs/Autoloading",isDocsHomePage:!1,title:"Autoloading",description:"After the introduction of [[Composer]] the configuration of PSR-4 style autoloading is quite simple.  Here are some links to provide background:",source:"@site/docs/docs/Autoloading.md",sourceDirName:"docs",slug:"/docs/Autoloading",permalink:"/fossology-blogs/docs/docs/Autoloading",editUrl:"https://github.com/Aman-Codes/fossology-blogs/edit/master/docs/docs/Autoloading.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Ant-build-file-example-for-test-execution",permalink:"/fossology-blogs/docs/docs/Ant-build-file-example-for-test-execution"},next:{title:"Buckets",permalink:"/fossology-blogs/docs/docs/Buckets"}},s=[{value:"What is autoloading?",id:"what-is-autoloading",children:[]},{value:"How to use autoloading?",id:"how-to-use-autoloading",children:[]},{value:"How to enable autoloading?",id:"how-to-enable-autoloading",children:[]}],u={toc:s};function c(e){var t=e.components,o=(0,r.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"After the introduction of [","[Composer]","] the configuration of PSR-4 style autoloading is quite simple.  Here are some links to provide background:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[","[PHP Autoloading Classes | http://php.net/autoload]","]"),(0,a.kt)("li",{parentName:"ul"},"[","[PSR-4 Autoloading Standard | http://www.php-fig.org/psr/psr-4/]","]"),(0,a.kt)("li",{parentName:"ul"},"[","[How to create a PSR-4 PHP package | http://culttt.com/2014/05/07/create-psr-4-php-package/]","]")),(0,a.kt)("h2",{id:"what-is-autoloading"},"What is autoloading?"),(0,a.kt)("p",null,"Autoloading helps to avoid management of require statements to load depending classes. It can be configured by adding Namespace -> Path mapping to the file composer.json."),(0,a.kt)("h2",{id:"how-to-use-autoloading"},"How to use autoloading?"),(0,a.kt)("p",null,"Each call of composer install/update creates or updates the autoloading configuration."),(0,a.kt)("p",null,"Content of composer.json:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    ...\n\n    "autoload": {\n        "psr-4": {"Fossology\\\\Lib\\\\": "lib/php"}\n    }\n}\n')),(0,a.kt)("p",null,"If you have a class on the path lib/php/Foo/Bar.php"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace Fossology\\Lib\\Foo;\n\nclass Bar\n{\n}\n")),(0,a.kt)("p",null,"you can now instatiate an object of type Bar everywhere just by using"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"$bar = new \\Fossology\\Lib\\Foo\\Bar();\n")),(0,a.kt)("p",null,"The autoloader takes care of reading the file Bar.php once to ensure a defined class Bar."),(0,a.kt)("h2",{id:"how-to-enable-autoloading"},"How to enable autoloading?"),(0,a.kt)("p",null,"Just include the autoloader initialization file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"src/vendor/autoload.php\n")),(0,a.kt)("p",null,"Currently this is done in src/lib/php/common.php."))}c.isMDXComponent=!0}}]);