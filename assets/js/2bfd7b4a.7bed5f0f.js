(self.webpackChunkfossology_blogs=self.webpackChunkfossology_blogs||[]).push([[2606],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return f}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),d=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(n),f=r,h=u["".concat(s,".").concat(f)]||u[f]||p[f]||a;return n?o.createElement(h,i(i({ref:t},c),{},{components:n})):o.createElement(h,i({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var d=2;d<a;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3962:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return s},default:function(){return c}});var o=n(2122),r=n(9756),a=(n(7294),n(3905)),i={},l={unversionedId:"docs/Maintenance-Agent",id:"docs/Maintenance-Agent",isDocsHomePage:!1,title:"Maintenance-Agent",description:"Maintagent is the FOSSology maintenance agent. This agent enforces the archive/expiration of an upload, checks the database for inconsistencies, checks for new updates, removes orphaned repository files and a host of other functions listed below. The agent can be run stand alone from the cli or from the scheduler. Each function can be individually specified, or -A (all) will run all the functions. You must be a FOSSology admin to run this. It will block all other agents when run from the scheduler.",source:"@site/docs/docs/Maintenance-Agent.md",sourceDirName:"docs",slug:"/docs/Maintenance-Agent",permalink:"/fossology-blogs/docs/docs/Maintenance-Agent",editUrl:"https://github.com/Aman-Codes/fossology-blogs/edit/master/docs/docs/Maintenance-Agent.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"License-Ref-Table",permalink:"/fossology-blogs/docs/docs/License-Ref-Table"},next:{title:"Introduction to problem",permalink:"/fossology-blogs/docs/docs/Migration-to-UTF-8-DB"}},s=[{value:"-A Run ALL operations",id:"-a-run-all-operations",children:[]},{value:"-a Run all non slow operations",id:"-a-run-all-non-slow-operations",children:[]},{value:"-U Process expired uploads (Archive or Delete) (slow)",id:"-u-process-expired-uploads-archive-or-delete-slow",children:[]},{value:"-D Vacuum analyze the database",id:"-d-vacuum-analyze-the-database",children:[]},{value:"-P Verify and fix file permissions",id:"-p-verify-and-fix-file-permissions",children:[]},{value:"-g Remove orphaned gold files from the repository.",id:"-g-remove-orphaned-gold-files-from-the-repository",children:[]},{value:"-p Verify (only) file permissions",id:"-p-verify-only-file-permissions",children:[]},{value:"-Z remove orphaned files from the repository (slow)",id:"-z-remove-orphaned-files-from-the-repository-slow",children:[]},{value:"-R remove uploads that have no pfiles",id:"-r-remove-uploads-that-have-no-pfiles",children:[]},{value:"-F Validate folder contents",id:"-f-validate-folder-contents",children:[]},{value:"-T Remove orphaned temp tables",id:"-t-remove-orphaned-temp-tables",children:[]},{value:"-i Initialize the database, then exit",id:"-i-initialize-the-database-then-exit",children:[]},{value:"-V Print the version info, then exit.",id:"-v-print-the-version-info-then-exit",children:[]},{value:"-c SYSCONFDIR",id:"-c-sysconfdir",children:[]}],d={toc:s};function c(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Maintagent is the FOSSology maintenance agent. This agent enforces the archive/expiration of an upload, checks the database for inconsistencies, checks for new updates, removes orphaned repository files and a host of other functions listed below. The agent can be run stand alone from the cli or from the scheduler. Each function can be individually specified, or -A (all) will run all the functions. You must be a FOSSology admin to run this. It will block all other agents when run from the scheduler."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"To run the maintagent, you must be a FOSSology admin (PLUGIN_DB_ADMIN).")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"When run via the scheduler, maintagent.conf must specify special[] = EXCLUSIVE, and special[] = NOKILL")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Each maintenance action can be individually specified from the command line, or -a (all) can be specified."))),(0,a.kt)("h2",{id:"-a-run-all-operations"},"-A Run ALL operations"),(0,a.kt)("h2",{id:"-a-run-all-non-slow-operations"},"-a Run all non slow operations"),(0,a.kt)("h2",{id:"-u-process-expired-uploads-archive-or-delete-slow"},"-U Process expired uploads (Archive or Delete) (slow)"),(0,a.kt)("p",null,"This will be a new feature in 2.5.0."),(0,a.kt)("h2",{id:"-d-vacuum-analyze-the-database"},"-D Vacuum analyze the database"),(0,a.kt)("h2",{id:"-p-verify-and-fix-file-permissions"},"-P Verify and fix file permissions"),(0,a.kt)("p",null,"/usr/share/fossology"),(0,a.kt)("p",null,"/srv/repostitory"),(0,a.kt)("p",null,"/etc/fossology"),(0,a.kt)("p",null,"And so on."),(0,a.kt)("h2",{id:"-g-remove-orphaned-gold-files-from-the-repository"},"-g Remove orphaned gold files from the repository."),(0,a.kt)("p",null,"These may be left by pre 2.4.0 versions of delagent."),(0,a.kt)("h2",{id:"-p-verify-only-file-permissions"},"-p Verify (only) file permissions"),(0,a.kt)("h2",{id:"-z-remove-orphaned-files-from-the-repository-slow"},"-Z remove orphaned files from the repository (slow)"),(0,a.kt)("p",null,"Loop through each file in the repository and make sure there is a corresponding reference in pfile, and also make sure that the pfile is referenced in uploadtree. For a large system, this can be a very slow process."),(0,a.kt)("h2",{id:"-r-remove-uploads-that-have-no-pfiles"},"-R remove uploads that have no pfiles"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-SQL"},"DELETE FROM upload WHERE upload_pk \n  IN (SELECT upload_fk FROM uploadtree WHERE parent IS NULL AND pfile_fk IS NULL) \n  OR upload_pk NOT IN (SELECT upload_fk FROM uploadtree)\n")),(0,a.kt)("h2",{id:"-f-validate-folder-contents"},"-F Validate folder contents"),(0,a.kt)("p",null,"Remove folder contents with invalid upload references"),(0,a.kt)("p",null,"DELETE FROM foldercontents WHERE foldercontents_mode = 2 AND child_id NOT IN (SELECT upload_pk FROM upload)"),(0,a.kt)("p",null,"Remove folder contents with invalid uploadtree references"),(0,a.kt)("p",null,"DELETE FROM foldercontents WHERE foldercontents_mode = 4 AND child_id NOT IN (SELECT uploadtree_pk FROM uploadtree)"),(0,a.kt)("p",null,"Remove unreferenced folders"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-SQL"},"DELETE FROM folder WHERE folder_pk \n   NOT IN (SELECT child_id FROM foldercontents WHERE foldercontents_mode = 1) \n   AND folder_pk != '1'\n")),(0,a.kt)("h2",{id:"-t-remove-orphaned-temp-tables"},"-T Remove orphaned temp tables"),(0,a.kt)("p",null,"Remove delagent tmp tables (the delup_xxxx_pfile tables)"),(0,a.kt)("p",null,"Remove pkgmetagetta tmp tables (metaanalysis_xxx tables)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-SQL"},"DELETE FROM information_schema.tables WHERE table_type = 'BASE TABLE' \n   AND table_schema = 'public' AND table_name SIMILAR TO '^metaanalysis_[[:digit:]]+$'\n")),(0,a.kt)("h2",{id:"-i-initialize-the-database-then-exit"},"-i Initialize the database, then exit"),(0,a.kt)("h2",{id:"-v-print-the-version-info-then-exit"},"-V Print the version info, then exit."),(0,a.kt)("h2",{id:"-c-sysconfdir"},"-c SYSCONFDIR"))}c.isMDXComponent=!0}}]);